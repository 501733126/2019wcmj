<h1>Game</h1>
<p><button onclick="myFunction()">按一下</button></p>
<p id="demo"></p>
<script>
function myFunction() {
  document.getElementById("demo").innerHTML = Math.floor(Math.random()*50 + 1);
  //document.getElementById("demo").innerHTML = "不要亂按";
 //alert("不要亂按")
}
</script><h1>倉儲改版指令</h1>
<p><span>指令解釋</span><br/><br/><strong><span>git add</span></strong><br/><span> 可以用來新增一個檔案, 數個檔案, 或在之前提交後所新增的所有內容.</span><br/><span>git add 在 GIT 架構下, 是對所新增或修改的內容拍快照:</span><br/><br/><br/><strong><span>git commit -"改版說明訊息"</span></strong><br/><span> 執行之前, 必須使用 git config 建立臨時或永久的身分註記, 因為 GIT 在展開所有改版內容時, 必須明確登錄這些變更的作者與時間.</span><br/><span>當使用者採用 git commit -m "改版說明訊息", 此次提交到 .git 目錄下的更動內容, 均會綁定使用者身分與改版所輸入的說明訊息.</span><br/><br/><strong><span>git push</span></strong><br/><span> 在隨後沒有輸入遠端 URL 代號時, 表示要推送到 origin, 若透過 git remote add 設定其他代號與 URL 對應時, git push 加上代號, 就可以將此次的提交內容, 推送到指定的 URL 所在遠端倉儲. </span></p><h1>期末報告</h1><h1>期中影片</h1>
<p><iframe allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/wEi8PuaFiQc" width="560"></iframe></p><h1>配置可攜程式環境</h1>
<p><span>取得 Windows 10 64 位元環境下的可攜程式環境 (下載  2019_cdb_w5.7z), 下載後解開目錄, 放入 USB3.0 規格以上的隨身碟或隨身硬碟.</span><br/><br/><span>以滑鼠點擊 start.bat 開啟可攜隨身系統, 以 stop.bat 關閉可攜隨身系統, <strong>隨身碟必須在關閉所有應用程式執行下, 才可正常退出.</strong></span><br/><br/><span>了解基本的 DOS (Disk Operating System) 指令</span><br/><br/><span>C:\&gt; 符號為 DOS 命令列視窗的回應 , 表示目前在 C 槽硬碟的 \ 根目錄, 若要切換到 Y 槽, 則在電腦的回應後, 輸入 Y:, 命令列將轉為</span><span>Y:\&gt;</span><br/><br/><span>若要<strong>更換目錄</strong>, 則使用<strong> cd</strong>,例如:<strong> </strong></span><strong>Y:\&gt;cd tmp</strong><br/><br/><span>表示要從 Y 槽的根目錄更換到 tmp 目錄, 也就是 </span><span>Y:\tmp&gt;</span><br/><br/><span>若要再回到 Y 槽的根目錄, 可以使用 cd ..</span><br/><br/><span>表示要從目前所在目錄, 往上跳回一個目錄, 也就是重新回到 Y 槽的根目錄.</span><br/><br/><span>另外, 無論目前位於哪一個子目錄, 也可以使用 cd \</span><br/><br/><span>直接回到根目錄.</span><br/><br/><span>或者從<strong> Y:\&gt; 直接使用</strong></span><br/><br/><strong>cd \tmp\repo\ssh\wcm2019</strong><br/><br/><span>直接從 Y 槽的根目錄, 跳進 Y:\tmp\repo\ssh\wcm2019&gt;</span><br/><br/><span>此外, 常用的 DOS 指令有:</span><br/><br/><span><strong>dir</strong> - 列出目前所在目錄的內容</span><br/><br/><span><strong>mkdir</strong> - 隨後加上要建立目錄的名稱, 可以建立目錄</span></p>
<p><span><strong>cls</strong> -清除目前的命令列顯示的內容</span></p><h1>Week_15</h1>
<h2>VirtualBox</h2>
<p>1.到ubuntu網站下載Sever</p>
<p>ubuntu網站:<a href="https://www.ubuntu.com/">https://www.ubuntu.com/<img alt="" height="231" src="/images/1.png" width="500"/></a></p>
<p>創一個虛擬主機<img alt="" height="281" src="/images/2.png" width="500"/><img alt="" height="446" src="/images/3.png" width="442"/><img alt="" height="456" src="/images/4.png" width="440"/></p>
<p><em>設定完虛擬主機即可開啟設定<img alt="" height="432" src="/images/5.png" width="500"/><img alt="" height="420" src="/images/6.png" width="500"/><img alt="" height="420" src="/images/7.png" width="500"/><img alt="" height="420" src="/images/8.png" width="500"/><img alt="" height="420" src="/images/9.png" width="500"/><img alt="" height="420" src="/images/10.png" width="500"/><img alt="" height="420" src="/images/11.png" width="500"/><img alt="" height="420" src="/images/12.png" width="500"/><img alt="" height="420" src="/images/12-1.png" width="500"/><img alt="" height="420" src="/images/12-2.png" width="500"/><img alt="" height="420" src="/images/12-3.png" width="500"/></em></p>
<p><strong>設定自己想要的名稱及密碼<img alt="" height="420" src="/images/12-4.png" width="500"/><img alt="" height="420" src="/images/12-5.png" width="500"/><img alt="" height="420" src="/images/12-6.png" width="500"/></strong></p>
<p><strong>等待安裝<img alt="" height="420" src="/images/13.png" width="500"/></strong></p>
<p><strong>安裝完選擇Reboot Now就可以使用了<img alt="" height="420" src="/images/14.png" width="500"/></strong></p>
<p><strong><span>sudo apt install nginx 安裝 nginx WWW 伺服器</span></strong></p><h2>校園授權軟體</h2>
<p><a class="ac-algo fz-l lh-20 tc d-ib va-mid" data-cc6="5ced4fc3c4b7c" href="https://r.search.yahoo.com/_ylt=AwrtFnbDT.1ccHwAVxBr1gt.;_ylu=X3oDMTEyY2s5cmpuBGNvbG8DdHcxBHBvcwMxBHZ0aWQDQjU1MTlfMQRzZWMDc3I-/RV=2/RE=1559085123/RO=10/RU=https%3a%2f%2fnfucc.nfu.edu.tw%2fzh%2fdownload%2fdownload-service%2f2015-09-22-01-16-07-2/RK=2/RS=87T8soBHUV0nGOhXmbqn_HXZudI-" id="yui_3_10_0_1_1559056324685_210" referrerpolicy="origin" saprocessedanchor="true" target="_blank">校園授權軟體下載專區(限校內IP)</a><span>，進入網站後登入校務帳號密碼，即可下載免費正版軟體。</span></p>
<p><img alt="" height="270" src="/images/aa.png" width="500"/></p><h1>ROC Flag</h1>
<div>
<div class="syntaxhighlighter py" id="highlighter_537375">
<table border="0" cellpadding="0" cellspacing="0">
<tbody>
<tr>
<td class="gutter">
<div class="line number1 index0 alt2">1</div>
<div class="line number2 index1 alt1">2</div>
<div class="line number3 index2 alt2">3</div>
<div class="line number4 index3 alt1">4</div>
<div class="line number5 index4 alt2">5</div>
<div class="line number6 index5 alt1">6</div>
<div class="line number7 index6 alt2">7</div>
<div class="line number8 index7 alt1">8</div>
</td>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="py keyword">def</code> <code class="py plain">savePage():</code></div>
<div class="line number2 index1 alt1"><code class="py spaces">    </code><code class="py comments">"""save all pages function"""</code></div>
<div class="line number3 index2 alt2"><code class="py spaces">    </code><code class="py plain">page_content </code><code class="py keyword">=</code> <code class="py plain">request.form[</code><code class="py string">'page_content'</code><code class="py plain">]</code></div>
<div class="line number4 index3 alt1"><code class="py spaces">    </code><code class="py comments"># when element_format : "html", need to remove the annoying comment to prevent brython exec</code></div>
<div class="line number5 index4 alt2"><code class="py spaces">    </code><code class="py plain">page_content </code><code class="py keyword">=</code> <code class="py plain">[w.replace(</code><code class="py string">'// &lt;![CDATA['</code><code class="py plain">, '') </code><code class="py keyword">for</code> <code class="py plain">w </code><code class="py keyword">in</code> <code class="py plain">page_content]</code></div>
<div class="line number6 index5 alt1"><code class="py spaces">    </code><code class="py plain">page_content </code><code class="py keyword">=</code> <code class="py plain">[w.replace(</code><code class="py string">'// ]]&gt;'</code><code class="py plain">, '') </code><code class="py keyword">for</code> <code class="py plain">w </code><code class="py keyword">in</code> <code class="py plain">page_content]</code></div>
<div class="line number7 index6 alt2"><code class="py spaces">    </code><code class="py comments"># check if administrator</code></div>
<div class="line number8 index7 alt1"><code class="py plain">......</code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
<p>def ssavePage() 的修改</p>
<div>
<div class="syntaxhighlighter py" id="highlighter_120138">
<table border="0" cellpadding="0" cellspacing="0">
<tbody>
<tr>
<td class="gutter">
<div class="line number1 index0 alt2">1</div>
<div class="line number2 index1 alt1">2</div>
<div class="line number3 index2 alt2">3</div>
<div class="line number4 index3 alt1">4</div>
<div class="line number5 index4 alt2">5</div>
<div class="line number6 index5 alt1">6</div>
<div class="line number7 index6 alt2">7</div>
<div class="line number8 index7 alt1">8</div>
<div class="line number9 index8 alt2">9</div>
</td>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="py keyword">def</code> <code class="py plain">ssavePage():</code></div>
<div class="line number2 index1 alt1"><code class="py spaces">    </code><code class="py comments">"""seperate save page function"""</code></div>
<div class="line number3 index2 alt2"><code class="py spaces">    </code><code class="py plain">page_content </code><code class="py keyword">=</code> <code class="py plain">request.form[</code><code class="py string">'page_content'</code><code class="py plain">]</code></div>
<div class="line number4 index3 alt1"><code class="py spaces">    </code><code class="py comments"># when element_format : "html", need to remove the annoying comment to prevent brython exec</code></div>
<div class="line number5 index4 alt2"><code class="py spaces">    </code><code class="py plain">page_content </code><code class="py keyword">=</code> <code class="py plain">page_content.replace(</code><code class="py string">'// &lt;![CDATA['</code><code class="py plain">, '')</code></div>
<div class="line number6 index5 alt1"><code class="py spaces">    </code><code class="py plain">page_content </code><code class="py keyword">=</code> <code class="py plain">page_content.replace(</code><code class="py string">'// ]]&gt;'</code><code class="py plain">, '')</code></div>
<div class="line number7 index6 alt2"><code class="py spaces">    </code><code class="py plain">page_order </code><code class="py keyword">=</code> <code class="py plain">request.form[</code><code class="py string">'page_order'</code><code class="py plain">]</code></div>
<div class="line number8 index7 alt1"><code class="py spaces">    </code><code class="py keyword">if</code> <code class="py keyword">not</code> <code class="py plain">isAdmin():</code></div>
<div class="line number9 index8 alt2"><code class="py plain">......</code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
<p></p>
<p><canvas height="400" id="plotarea" width="600"></canvas></p>
<p></p>
<!-- 導入 Brython 標準程式庫 -->
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
<p></p>
<!-- 啟動 Brython -->
<script>
window.onload=function(){
// 設定 data/py 為共用程式路徑
brython({debug:1, pythonpath:['./../data/py']});
}
</script>
<p><canvas height="400" id="plotarea" width="600"></canvas></p>
<script type="text/python">
# 導入 doc
from browser import document as doc
import math

# 準備繪圖畫布
canvas = doc["plotarea"]
ctx = canvas.getContext("2d")
# 進行座標轉換, x 軸不變, y 軸反向且移動 canvas.height 單位光點
# ctx.setTransform(1, 0, 0, -1, 0, canvas.height)
# 以下採用 canvas 原始座標繪圖
flag_w = canvas.width
flag_h = canvas.height
circle_x = flag_w/4
circle_y = flag_h/4
# 先畫滿地紅
ctx.fillStyle='rgb(255, 0, 0)'
ctx.fillRect(0,0,flag_w,flag_h)
# 再畫青天
ctx.fillStyle='rgb(0, 0, 150)'
ctx.fillRect(0,0,flag_w/2,flag_h/2)
# 畫十二道光芒白日
ctx.beginPath()
star_radius = flag_w/8
angle = 0
for i in range(24):
    angle += 5*math.pi*2/12
    toX = circle_x + math.cos(angle)*star_radius
    toY = circle_y + math.sin(angle)*star_radius
    # 只有 i 為 0 時移動到 toX, toY, 其餘都進行 lineTo
    if (i):
        ctx.lineTo(toX, toY)
    else:
        ctx.moveTo(toX, toY)
ctx.closePath()
# 將填色設為白色
ctx.fillStyle = '#fff'
ctx.fill()
# 白日:藍圈
ctx.beginPath()
ctx.arc(circle_x, circle_y, flag_w*17/240, 0, math.pi*2, True)
ctx.closePath()
# 填色設為藍色
ctx.fillStyle = 'rgb(0, 0, 149)'
ctx.fill()
# 白日:白心
ctx.beginPath()
ctx.arc(circle_x, circle_y, flag_w/16, 0, math.pi*2, True)
ctx.closePath()
# 填色設為白色
ctx.fillStyle = '#fff'
ctx.fill()
</script>
<p><canvas height="400" id="plotarea2" width="600"></canvas></p>
<script type="text/python">
# 導入 doc
from browser import document as doc
import math

# 準備繪圖畫布
canvas = doc["plotarea2"]
ctx = canvas.getContext("2d")
# 進行座標轉換, x 軸不變, y 軸反向且移動 canvas.height 單位光點
# ctx.setTransform(1, 0, 0, -1, 0, canvas.height)
# 以下採用 canvas 原始座標繪圖
flag_w = canvas.width
flag_h = canvas.height
circle_x = flag_w/2
circle_y = flag_h/2
# 先畫滿地紅
ctx.fillStyle='rgb(255, 20, 147)'
ctx.fillRect(0,0,flag_w,flag_h)
# 再畫青天
ctx.fillStyle='rgb(255, 64, 64)'
ctx.fillRect(0,0,flag_w/2,flag_h/2)
# 畫十二道光芒白日
ctx.beginPath()
star_radius = flag_w/8
angle = 0
for i in range(24):
    angle += 5*math.pi*2/12
    toX = circle_x + math.cos(angle)*star_radius
    toY = circle_y + math.sin(angle)*star_radius
    # 只有 i 為 0 時移動到 toX, toY, 其餘都進行 lineTo
    if (i):
        ctx.lineTo(toX, toY)
    else:
        ctx.moveTo(toX, toY)
ctx.closePath()
# 將填色設為白色
ctx.fillStyle ='rgb(160, 32, 240)'
ctx.fill()
# 白日:藍圈
ctx.beginPath()
ctx.arc(circle_x, circle_y, flag_w*17/240, 0, math.pi*2, True)
ctx.closePath()
# 填色設為藍色
ctx.fillStyle = 'rgb(144, 238, 144)'
ctx.fill()
# 白日:白心
ctx.beginPath()
ctx.arc(circle_x, circle_y, flag_w/16, 0, math.pi*2, True)
ctx.closePath()
# 填色設為白色
ctx.fillStyle = 'rgb(240,255,255)'
ctx.fill()
</script>
<p><br/>W14 &lt;&lt; <a href="/get_page/ROC%20Flag/W14.html">Previous</a></p>
<!-- footer -->
<div class="container">
<div class="row pt-3 mx-auto">
<p><!-- Link back to Colorlib can't be removed. Template is licensed under CC BY 3.0. --> Copyright ©
<script>
document.write(new Date().getFullYear());
</script>
All rights reserved | This template is made with <i aria-hidden="true" class="icon-heart"></i> by <a href="https://colorlib.com" target="_blank">Colorlib</a> <!-- Link back to Colorlib can't be removed. Template is licensed under CC BY 3.0. --></p>
</div>
</div>
<!-- for footer -->
<p></p>
<!-- for site wrap -->
<p></p>
<!-- <script src="/static/chimper/js/jquery-3.3.1.min.js"></script> -->
<script src="/static/chimper/js/jquery-migrate-3.0.1.min.js"></script>
<script src="/static/chimper/js/jquery-ui.js"></script>
<script src="/static/chimper/js/popper.min.js"></script>
<script src="/static/chimper/js/bootstrap.min.js"></script>
<script src="/static/chimper/js/owl.carousel.min.js"></script>
<script src="/static/chimper/js/jquery.stellar.min.js"></script>
<script src="/static/chimper/js/jquery.countdown.min.js"></script>
<script src="/static/chimper/js/jquery.magnific-popup.min.js"></script>
<script src="/static/chimper/js/bootstrap-datepicker.min.js"></script>
<script src="/static/chimper/js/aos.js"></script>
<!--
            <script src="/static/js/typed.js"></script>
                    <script>
                    var typed = new Typed('.typed-words', {
                    strings: ["Web Apps"," WordPress"," Mobile Apps"],
                    typeSpeed: 80,
                    backSpeed: 80,
                    backDelay: 4000,
                    startDelay: 1000,
                    loop: true,
                    showCursor: true
                    });
                    </script>
            -->
<script src="/static/chimper/js/main.js"></script>
<p><br/>期中影片 &lt;&lt; <a href="/get_page/ROC%20Flag/期中影片.html">Previous</a></p>
<h1>繪圖</h1>
<h2>Brython</h2>
<!-- 導入 Brython 標準程式庫 -->
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
<p></p>
<!-- 啟動 Brython -->
<script>
window.onload=function(){
// 設定 data/py 為共用程式路徑
brython({debug:1, pythonpath:['./../data/py']});
}
</script>
<p><canvas height="600" id="onegear" width="800"></canvas></p>
<!-- 以下製作 button-->
<div height="20" id="onegear_div" width="800"></div>
<p><input id="n" type="text" value="22"/><br/> <button id="button">Set Number of Gears</button></p>
<!-- 以下實際利用  Brython 繪圖-->
<script type="text/python3">
from browser import document as doc
import math
# deg 為角度轉為徑度的轉換因子
deg = math.pi/180.
# 定義 Spur 類別
class Spur(object):
    def __init__(self, ctx):
        self.ctx = ctx
 
    def create_line(self, x1, y1, x2, y2, width=3, fill="red"):
        self.ctx.beginPath()
        self.ctx.lineWidth = width
        self.ctx.moveTo(x1, y1)
        self.ctx.lineTo(x2, y2)
        self.ctx.strokeStyle = fill
        self.ctx.stroke()
 
    # 定義一個繪正齒輪的繪圖函式
    # midx 為齒輪圓心 x 座標
    # midy 為齒輪圓心 y 座標
    # rp 為節圓半徑, n 為齒數
    # pa 為壓力角 (deg)
    # rot 為旋轉角 (deg)
    # 已經針對 n 大於等於 52 齒時的繪圖錯誤修正, 因為 base circle 與齒根圓大小必須進行判斷
    def Gear(self, midx, midy, rp, n=20, pa=20, color="black"):
        # 齒輪漸開線分成 15 線段繪製
        imax = 15
        # 在輸入的畫布上繪製直線, 由圓心到節圓 y 軸頂點畫一直線
        self.create_line(midx, midy, midx, midy-rp)
        # a 為模數 (代表公制中齒的大小), 模數為節圓直徑(稱為節徑)除以齒數
        # 模數也就是齒冠大小
        a=2*rp/n
        # d 為齒根大小, 為模數的 1.157 或 1.25倍, 這裡採 1.25 倍
        d=2.5*rp/n
        # ra 為齒輪的外圍半徑
        ra=rp+a
        # rb 則為齒輪的基圓半徑
        # 基圓為漸開線長齒之基準圓
        rb=rp*math.cos(pa*deg)
        # rd 為齒根圓半徑
        rd=rp-d
        # 當 rd 大於 rb 時, 漸開線並非畫至 rb, 而是 rd
        # dr 則為基圓到齒頂圓半徑分成 imax 段後的每段半徑增量大小
        # 將圓弧分成 imax 段來繪製漸開線
        # 當 rd 大於 rb 時, 漸開線並非畫至 rb, 而是 rd
        if rd>rb:
            dr = (ra-rd)/imax
        else:
            dr=(ra-rb)/imax
        # tan(pa*deg)-pa*deg 為漸開線函數
        sigma=math.pi/(2*n)+math.tan(pa*deg)-pa*deg
        for j in range(n):
            ang=-2.*j*math.pi/n+sigma
            ang2=2.*j*math.pi/n+sigma
            lxd=midx+rd*math.sin(ang2-2.*math.pi/n)
            lyd=midy-rd*math.cos(ang2-2.*math.pi/n)
            for i in range(imax+1):
                # 當 rd 大於 rb 時, 漸開線並非畫至 rb, 而是 rd
                if rd>rb:
                    r=rd+i*dr
                else:
                    r=rb+i*dr
                theta=math.sqrt((r*r)/(rb*rb)-1.)
                alpha=theta-math.atan(theta)
                xpt=r*math.sin(alpha-ang)
                ypt=r*math.cos(alpha-ang)
                xd=rd*math.sin(-ang)
                yd=rd*math.cos(-ang)
                # i=0 時, 繪線起點由齒根圓上的點, 作為起點
                if(i==0):
                    last_x = midx+xd
                    last_y = midy-yd
                # 由左側齒根圓作為起點, 除第一點 (xd,yd) 齒根圓上的起點外, 其餘的 (xpt,ypt)則為漸開線上的分段點
                self.create_line((midx+xpt),(midy-ypt),(last_x),(last_y),fill=color)
                # 最後一點, 則為齒頂圓
                if(i==imax):
                    lfx=midx+xpt
                    lfy=midy-ypt
                last_x = midx+xpt
                last_y = midy-ypt
            # the line from last end of dedendum point to the recent
            # end of dedendum point
            # lxd 為齒根圓上的左側 x 座標, lyd 則為 y 座標
            # 下列為齒根圓上用來近似圓弧的直線
            self.create_line((lxd),(lyd),(midx+xd),(midy-yd),fill=color)
            for i in range(imax+1):
                # 當 rd 大於 rb 時, 漸開線並非畫至 rb, 而是 rd
                if rd>rb:
                    r=rd+i*dr
                else:
                    r=rb+i*dr
                theta=math.sqrt((r*r)/(rb*rb)-1.)
                alpha=theta-math.atan(theta)
                xpt=r*math.sin(ang2-alpha)
                ypt=r*math.cos(ang2-alpha)
                xd=rd*math.sin(ang2)
                yd=rd*math.cos(ang2)
                # i=0 時, 繪線起點由齒根圓上的點, 作為起點
                if(i==0):
                    last_x = midx+xd
                    last_y = midy-yd
                # 由右側齒根圓作為起點, 除第一點 (xd,yd) 齒根圓上的起點外, 其餘的 (xpt,ypt)則為漸開線上的分段點
                self.create_line((midx+xpt),(midy-ypt),(last_x),(last_y),fill=color)
                # 最後一點, 則為齒頂圓
                if(i==imax):
                    rfx=midx+xpt
                    rfy=midy-ypt
                last_x = midx+xpt
                last_y = midy-ypt
            # lfx 為齒頂圓上的左側 x 座標, lfy 則為 y 座標
            # 下列為齒頂圓上用來近似圓弧的直線
            self.create_line(lfx,lfy,rfx,rfy,fill=color)
canvas = doc['onegear']
ctx = canvas.getContext("2d")
 
# 以 button 驅動的事件函式
def setgearnumber(e):
    ctx.clearRect(0, 0, canvas.width, canvas.height)
    x = (canvas.width)/2
    y = (canvas.height)/2
    if doc["n"].value.isdigit():
        n1 = int(doc["n"].value)
    else:
        n1= 25
    # 設定齒輪參數
    x = (canvas.width)/2
    y = (canvas.height)/2
    r = 0.6*(canvas.height/2)
    pa = 20
    # 繪出齒輪
    Spur(ctx).Gear(x, y, r, n1, pa, "blue")
#判定 button
setgearnumber(True)
doc['button'].bind('click',setgearnumber)
</script><h2>Canvas</h2>
<p> Html5 Canvas 繪圖的程式碼:</p>
<div>
<div class="syntaxhighlighter html" id="highlighter_435838">
<table border="0" cellpadding="0" cellspacing="0">
<tbody>
<tr>
<td class="gutter">
<div class="line number1 index0 alt2">1</div>
<div class="line number2 index1 alt1">2</div>
<div class="line number3 index2 alt2">3</div>
<div class="line number4 index3 alt1">4</div>
<div class="line number5 index4 alt2">5</div>
<div class="line number6 index5 alt1">6</div>
<div class="line number7 index6 alt2">7</div>
<div class="line number8 index7 alt1">8</div>
<div class="line number9 index8 alt2">9</div>
<div class="line number10 index9 alt1">10</div>
<div class="line number11 index10 alt2">11</div>
<div class="line number12 index11 alt1">12</div>
<div class="line number13 index12 alt2">13</div>
<div class="line number14 index13 alt1">14</div>
<div class="line number15 index14 alt2">15</div>
<div class="line number16 index15 alt1">16</div>
<div class="line number17 index16 alt2">17</div>
<div class="line number18 index17 alt1">18</div>
<div class="line number19 index18 alt2">19</div>
<div class="line number20 index19 alt1">20</div>
<div class="line number21 index20 alt2">21</div>
<div class="line number22 index21 alt1">22</div>
<div class="line number23 index22 alt2">23</div>
<div class="line number24 index23 alt1">24</div>
<div class="line number25 index24 alt2">25</div>
<div class="line number26 index25 alt1">26</div>
<div class="line number27 index26 alt2">27</div>
<div class="line number28 index27 alt1">28</div>
<div class="line number29 index28 alt2">29</div>
</td>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="html plain">&lt;</code><code class="html keyword">p</code><code class="html plain">&gt;&lt;</code><code class="html keyword">canvas</code> <code class="html color1">height</code><code class="html plain">=</code><code class="html string">"300"</code> <code class="html color1">id</code><code class="html plain">=</code><code class="html string">"canvas"</code> <code class="html color1">width</code><code class="html plain">=</code><code class="html string">"400"</code><code class="html plain">&gt; Your browser doesn't support the HTML5 element canvas. &lt;/</code><code class="html keyword">canvas</code><code class="html plain">&gt;&lt;/</code><code class="html keyword">p</code><code class="html plain">&gt;</code></div>
<div class="line number2 index1 alt1"><code class="html plain">&lt;</code><code class="html keyword">script</code><code class="html plain">&gt;</code></div>
<div class="line number3 index2 alt2"><code class="html plain">canvas = document.getElementById("canvas");</code></div>
<div class="line number4 index3 alt1"><code class="html plain">ctx = canvas.getContext('2d');</code></div>
<div class="line number5 index4 alt2"><code class="html spaces"> </code> </div>
<div class="line number6 index5 alt1"><code class="html plain">function draw(){</code></div>
<div class="line number7 index6 alt2"><code class="html spaces"> </code><code class="html plain">ctx.beginPath();</code></div>
<div class="line number8 index7 alt1"><code class="html spaces"> </code><code class="html plain">ctx.strokeStyle = "rgb(0,0,200)";</code></div>
<div class="line number9 index8 alt2"><code class="html spaces"> </code><code class="html plain">ctx.arc(200, 200,50,0,2*Math.PI, false);</code></div>
<div class="line number10 index9 alt1"><code class="html spaces"> </code><code class="html plain">ctx.closePath();</code></div>
<div class="line number11 index10 alt2"><code class="html spaces"> </code><code class="html plain">ctx.stroke();</code></div>
<div class="line number12 index11 alt1"><code class="html plain">}</code></div>
<div class="line number13 index12 alt2"><code class="html spaces"> </code> </div>
<div class="line number14 index13 alt1"><code class="html plain">function clear_canvas(){</code></div>
<div class="line number15 index14 alt2"><code class="html plain">// Store the current transformation matrix</code></div>
<div class="line number16 index15 alt1"><code class="html plain">// The save() method pushes the current state onto the stack..</code></div>
<div class="line number17 index16 alt2"><code class="html plain">ctx.save();</code></div>
<div class="line number18 index17 alt1"><code class="html spaces"> </code> </div>
<div class="line number19 index18 alt2"><code class="html plain">// Use the identity matrix while clearing the canvas</code></div>
<div class="line number20 index19 alt1"><code class="html plain">// the setTransform() method lets you scale, rotate, move, and skew the current context.</code></div>
<div class="line number21 index20 alt2"><code class="html plain">// setTransform(Horizontal scaling, Horizontal skewing,Vertical skewing, Vertical scaling, Horizontal moving, Vertical moving)</code></div>
<div class="line number22 index21 alt1"><code class="html plain">ctx.setTransform(1, 0, 0, 1, 0, 0);</code></div>
<div class="line number23 index22 alt2"><code class="html plain">ctx.clearRect(0, 0, canvas.width, canvas.height);</code></div>
<div class="line number24 index23 alt1"><code class="html plain">// Restore the transform</code></div>
<div class="line number25 index24 alt2"><code class="html plain">// The restore() method pops the top state on the stack, restoring the context to that state.</code></div>
<div class="line number26 index25 alt1"><code class="html plain">ctx.restore();</code></div>
<div class="line number27 index26 alt2"><code class="html plain">}</code></div>
<div class="line number28 index27 alt1"><code class="html plain">&lt;/</code><code class="html keyword">script</code><code class="html plain">&gt;</code></div>
<div class="line number29 index28 alt2"><code class="html plain">&lt;</code><code class="html keyword">p</code><code class="html plain">&gt;&lt;</code><code class="html keyword">button</code> <code class="html color1">onclick</code><code class="html plain">=</code><code class="html string">"draw()"</code><code class="html plain">&gt;繪圖&lt;/</code><code class="html keyword">button</code><code class="html plain">&gt; &lt;</code><code class="html keyword">button</code> <code class="html color1">onclick</code><code class="html plain">=</code><code class="html string">"clear_canvas()"</code><code class="html plain">&gt;清除&lt;/</code><code class="html keyword">button</code><code class="html plain">&gt;&lt;/</code><code class="html keyword">p</code><code class="html plain">&gt;</code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
<p><canvas height="300" id="canvas" width="400"> Your browser doesn't support the HTML5 element canvas. </canvas></p>
<script>
canvas = document.getElementById("canvas");
ctx = canvas.getContext('2d');
  
function draw(){
 ctx.beginPath();
 ctx.strokeStyle = "rgb(0,0,200)";
 ctx.arc(200, 200,50,0,2*Math.PI, false);
 ctx.closePath();
 ctx.stroke();
}
  
function clear_canvas(){
// Store the current transformation matrix
// The save() method pushes the current state onto the stack..
ctx.save();
  
// Use the identity matrix while clearing the canvas
// the setTransform() method lets you scale, rotate, move, and skew the current context.
// setTransform(Horizontal scaling, Horizontal skewing,Vertical skewing, Vertical scaling, Horizontal moving, Vertical moving)
ctx.setTransform(1, 0, 0, 1, 0, 0);
ctx.clearRect(0, 0, canvas.width, canvas.height);
// Restore the transform
// The restore() method pops the top state on the stack, restoring the context to that state.
ctx.restore();
}
</script>
<p><button onclick="draw()">繪圖</button> <button onclick="clear_canvas()">清除</button></p>